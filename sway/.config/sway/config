### Variables
# Mod4 is Logo key.
set $mod Mod4
set $alt Mod1
set $left h
set $down j
set $up k
set $right l
set $term alacritty
set $scripts $HOME/bin/scripts
set $browser firefox
set $chrome google-chrome
set $file_manager nautilus

## Command Variables
set $shutdown sudo shutdown -h now
set $reboot sudo reboot
set $netrefresh  sudo systemctl restart NetworkManager
set $hibernate sudo systemctl suspend
set $dmenu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi -i --show drun
# set $dropdown $term -t dropdown -e zsh -c tmux
set $dropdown $term -t dropdown -e nvim +term


# Screenshot of selection to stdout, saving to a file and into clipboard
set $screenshot grim -g "$(slurp)" - | tee /tmp/"screenshot_$(date +%Y%m%d_%H%M%S)".png | wl-copy
# TODO: Improve wf-recorder, there's a good script in sway/contrib
set $record wf-recorder -a -g "$(slurp)" -f /tmp/"recording_$(date +%Y%m%d_%H%M%S)".mp4
set $record-stop killall -s SIGINT wf-recorder

### Startup
exec_always pkill -x mako; sleep 1; mako
# Authentication agent
exec $scripts/track_prev_focus
exec insync start --qt-qpa-platform=xcb && insync show
exec nm-applet
# Gnome authentication Agent
#exec /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1
# Polkit authentication agent
exec lxpolkit # Sudo Application authentication

### Key bindings

## Basics:

    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec x-terminal-emulator

    # Kill focused window
    bindsym $mod+Shift+q kill
    # bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+F2 reload

    # # Little script that show suspend, lock, exit, reboot
    bindsym $mod+Shift+e exec $scripts/off-wofi
    bindsym $mod+z exec $scripts/off-wofi

#
# Added functionality:
#
# Toggle Redshift
bindsym $mod+Home exec pkill -USR1 redshift

# Screenshot selection
bindsym --release Shift+Print exec $screenshot
bindsym --release $mod+Shift+Print exec notify-send "Now recording", exec $record
bindsym $mod+Shift+Backspace exec $record-stop, notify-send "Recording Stopped"

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move focus to previous window
    bindsym $mod+g focus next
    bindsym $mod+Shift+g focus prev

    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left 30px
    bindsym $mod+Shift+$down move down 30px
    bindsym $mod+Shift+$up move up 30px
    bindsym $mod+Shift+$right move right 30px

    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # Advanced Movement
    bindsym $mod+b workspace back_and_forth
    bindsym $mod+e workspace back_and_forth
    bindsym $alt+Tab workspace back_and_forth
    bindsym $mod+Tab workspace back_and_forth
    bindsym $mod+Escape exec $scripts/sway-list-windows

    #Moving between workspaces
    bindsym $mod+period workspace next_on_output
    bindsym $mod+comma workspace prev_on_output

    #Moving window throught workspaces
    bindsym $mod+Shift+comma move container to workspace prev_on_output, workspace prev_on_output
    bindsym $mod+Shift+period move container to workspace next_on_output, workspace next_on_output

    #Opens next free workspace
    bindsym $mod+o exec $scripts/next-empty-workspace open
    bindsym $mod+Shift+o exec $scripts/next-empty-workspace move

#
# Workspaces:
#
    # On trying to switch to the current workspace,
    # Move back
    workspace_auto_back_and_forth yes
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#

    # Switch the current container between different layout styles
    # bindsym $mod+e layout stacking
    # bindsym $mod+w layout default 

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $mod+Shift+a focus child

    # Gaps
    # only outer gaps when 1 window present
    # inside gaps
    # inner+outer = edge gap
    smart_borders on
    smart_gaps on
    gaps inner 8
    gaps outer 2
    bindsym $mod+m gaps inner current plus 5
    bindsym $mod+Shift+m gaps inner current minus 5
    bindsym $mod+$alt+m gaps outer current plus 5
    bindsym $mod+Shift+$alt+m gaps outer current minus 5

#
# Theme stuff
#



#
# Scratchpad:
#
    # Initialise windows stored in scratchpad
    exec  $dropdown
    exec  $term -t nnn -e nnn
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # Hides any scratchpad marked with last, or shows the last one marked
    bindsym $mod+u [title="^dropdown$"] scratchpad show, move position center, mark --add _last
    bindsym $mod+n [title="^nnn$"] scratchpad show, move position center, mark --add _last
    # bindsym $mod+n [con_mark="(_last|.)" floating] scratchpad show
    bindsym $mod+c [con_mark="^scratch_whatsapp$"] scratchpad show, move position center

    # To send any window I want to the scratchpad
    bindsym $mod+Shift+minus mark scratch, move scratchpad
    bindsym $mod+minus [con_mark="^scratch$"] scratchpad show

#
# Modes
#

# Launch mode
bindsym $mod+i mode "launch"
mode "launch" {
        bindsym b exec $browser, mode "default"

        # Nautilus, file manager
        bindsym f exec $file_manager, mode "default"
        bindsym $mod+f [con_mark="^scratch_nautilus$"] scratchpad show, move position center, mode "default", mark --add _last
        bindsym Shift+f mark scratch_nautilus, move scratchpad, mode "default"

        # Element
        bindsym e exec element-desktop, mode "default"
        bindsym $mod+e [class="^Element$"] scratchpad show, move position center, mode "default", mark --add _last

        # Spotify
        bindsym m exec spotify, mode "default"
        bindsym $mod+m [class="^Spotify$"] scratchpad show, move position center, mode "default", mark --add _last

        # Rhythmbox
        bindsym n exec rhythmbox, mode "default"
        bindsym $mod+n [app_id="^rhythmbox$"] scratchpad show, move position center, mode "default", mark --add _last

        # Discord
        bindsym d exec discord, mode "default"
        bindsym $mod+d [class="^discord$"] scratchpad show, move position center, mode "default", mark --add _last

        # Insync Google Drive
        bindsym g exec insync show, mode "default"
        bindsym $mod+g [class="^Insync$"] scratchpad show, move position center, mode "default", mark --add _last

        # Telegram
        bindsym t exec telegram-desktop, mode "default"
        bindsym $mod+t [app_id="telegram-desktop_telegram-desktop"] scratchpad show, move position center, mode "default", mark --add _last

        # Signal
        bindsym s exec signal-desktop, mode "default"
        bindsym $mod+s [class="^Signal$" instance="^signal"] scratchpad show, move position center, mode "default", mark --add _last

        # Whatsapp
        bindsym c exec whatsdesk, mode "default"
        # bindsym c exec $chrome --app="https://web.whatsapp.com/", mode "default"
        bindsym $mod+Shift+c mark scratch_whatsapp, mode "default"

        # Home Assistant
        bindsym h exec $chrome --app="http://ha.loc", mode "default"
        bindsym $mod+h [con_mark="^scratch_ha_dashboard$"] scratchpad show, move position center, mode "default", mark --add _last

        # Todoist
        bindsym u exec $chrome --app="https://todoist.com/app/#/upcoming", mode "default"
        bindsym $mod+u [con_mark="^scratch_todoist$"] scratchpad show, move position center, mode "default", mark --add _last

        # Bitwarden
        bindsym p exec bitwarden, mode "default"
        bindsym $mod+p [class="^Bitwarden$"] scratchpad show, move position center, mode "default", mark --add _last

        # Pomodoro Timer
        bindsym y exec pomotroid, mode "default"
        bindsym $mod+y [class="^pomotroid$"] scratchpad show, move position center, mode "default", mark --add _last

        # Notes Scratchpad
        bindsym Shift+i mark notes_scratch, move scratchpad, mode "default"
        bindsym i [con_mark="^notes_scratch$"] scratchpad show, mode "default", mark --add _last
        bindsym $mod+i [con_mark="^notes_scratch$"] scratchpad show, mode "default", mark --add _last

        # Bring back dropdown in case closed.
        bindsym Shift+d exec  $dropdown, mode "default"
        bindsym Shift+n exec  $term -t nnn -e nnn, mode "default"

        # Getting out of the mode
        bindsym escape mode "default"
        bindsym return mode "default"
}


# Settings mode
bindsym $mod+t mode "settings"
mode "settings" {
        # Off wofi
        bindsym e exec $scripts/off-wofi, mode "default"
        bindsym $mod+e exec $scripts/off-wofi, mode "default"

        # Useful goodies
        bindsym $mod+t exec $scripts/wofi-options.py, mode "default"

        # Sound
        bindsym s exec $scripts/volume-control change-sink, mode "default"
        bindsym d exec $scripts/wofi-options.py change-sink, mode "default"
        bindsym m input 1133:49970:Logitech_Gaming_Mouse_G502 events enabled, mode "default"
        bindsym n input 1133:49970:Logitech_Gaming_Mouse_G502 events disabled, mode "default"
        bindsym Escape mode "default"

}

# resize containers 
bindsym $mod+r mode "resize"
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $right resize grow width 20px
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px

    # With shift for fine grained
    bindsym Shift+$right resize grow width 10px
    bindsym Shift+$left resize shrink width 10px
    bindsym Shift+$down resize grow height 10px
    bindsym Shift+$up resize shrink height 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Settings mode
bindsym $mod+w mode "layout"
mode "layout" {
        # Resize Mode
        bindsym $mod+r mode "resize"

        # Quitting
        bindsym q kill, mode "default"
        bindsym $mod+q kill, mode "default"

        # Quick Stacking
        bindsym $left split vertical, focus left, move right, layout stacking, focus up, mode "default"
        bindsym $right split vertical, focus right, move left, layout stacking, focus up, mode "default"

        # Quick one over the other
        bindsym $down split vertical, focus left, move right, focus down, mode "default"
        bindsym $up split vertical, focus right, move left, focus up, mode "default"

        # Quick sticky window following
        bindsym $mod+f floating enable, resize set 1000 562, sticky toggle, mode "default"

        # Properties
        bindsym Shift+s sticky toggle, mode "default"
        bindsym f floating toggle, mode "default"
        bindsym space floating toggle, mode "default"

        # Split direction
        bindsym v split horizontal, mode "default"
        bindsym s split vertical, mode "default"

        # Change layout mode
        bindsym $mod+d layout toggle split, mode "default"
        bindsym $mod+s layout stacking, mode "default"
        bindsym $mod+t layout tabbed, mode "default"

        # Resize
        bindsym $mod+q+$right resize grow width 20px
        bindsym $mod+q+$left resize shrink width 20px
        bindsym $mod+q+$down resize grow height 20px
        bindsym $mod+q+$up resize shrink height 20px

        # Movement
        bindsym $mod+w+$left move position 0px 0px
        bindsym $mod+w+$down move down 30 ppt
        bindsym $mod+w+$up move up 30 ppt
        bindsym $mod+w+$right move right 30 ppt

        #todo: moving floating windows.
        bindsym escape mode "default"
        bindsym return mode "default"

        # Takes screenshot and video
        bindsym --release $mod+Shift+period exec $screenshot, mode "default"
        bindsym --release $mod+Shift+comma exec notify-send "Now recording", exec $record, mode "default"
        bindsym $mod+Shift+Backspace exec $record-stop, notify-send "Recording Stopped", mode "default"

}

# Debug mode
bindsym $mod+End mode "debug"
mode "debug" {
        bindsym p exec echo $PATH && id, mode "default"
        bindsym Escape mode "default"
        bindsym Return mode "default"
}

# Controling sway nagbar with keyboard
# TODO: Fix doesn't work
swaynag_command mode "nagbar"
mode "nagbar" {
  bindsym {
    Ctrl+d    mode "default"

    Ctrl+c    $nag --exit
    q         $nag --exit
    Escape    $nag --exit

    Return    $nag --confirm

    Tab       $nag --select prev
    Shift+Tab $nag --select next

    Left      $nag --select next
    Right     $nag --select prev

    Up        $nag --select next
    Down      $nag --select prev
  }
}


### Layouts stuff
#
# Global Properties
focus_follow_mouse yes
titlebar_border_thickness 1
for_window [title=".*"] border pixel 5
show_marks yes
bindsym $mod+Shift+Insert border toggle
bindsym $mod+Insert title_format title:%title app_id:%app_id class:%class instance:%instance shell:%shell

# Layout
for_window [app_id="^(pavucontrol|wdisplays|psensor|gnome-calculator|gnome-power-.*|system-config-printer|nm-connection.*)"] floating enable, resize set 925 600
for_window [title="^(Advanced search|Query.*)$" app_id="^recoll$"] floating enable, resize set 925 600

# Opacity
for_window [app_id="^Alacritty$"] opacity set 0.98
for_window [title="dropdown"] opacity set 0.84
for_window [con_mark="^notes_scratch$"] opacity set 0.80

# scrachpads
for_window [title="^(dropdown|nnn)$"] floating enable, resize set 1400 1000, move scratchpad, border pixel 5
for_window [class="^whatsdesk$"] floating enable, resize set 1400 1000, move scratchpad, border pixel 5, mark scratch_whatsapp
for_window [class="^Signal$" instance="^signal"] floating enable, resize set 1400 1000, move scratchpad, border pixel 5, mark scratch_signal
for_window [instance="^ha.loc$"] floating enable, resize set 1400 1000, move scratchpad, border pixel 5, mark scratch_ha_dashboard
for_window [instance="^todoist.com\_.*$"] floating enable, resize set 1400 1000, move scratchpad, border pixel 5, mark scratch_todoist
for_window [class="^(Gitter|Element|discord)$"] floating enable, resize set 1400 1000, move scratchpad, border pixel 5
# for_window [app_id="(telegram-desktop_telegram-desktop|rhythmbox)"] floating enable, resize set 1400 1000, move scratchpad, border pixel 5
for_window [app_id="(telegram-desktop_telegram-desktop)"] floating enable, resize set 1400 1000, move scratchpad, border pixel 5
for_window [class="^pomotroid$"] move scratchpad

for_window [class="^Spotify$"] floating enable, resize set 2000 1200, move scratchpad, border pixel 1
for_window [class="^Bitwarden$"] floating enable, resize set 925 600, move scratchpad, border pixel 1
# for_window [class="^Insync$"] floating enable, resize set 925 600, move scratchpad, border pixel 1
for_window [class="^Insync$"] floating enable, resize set 925 600

# Zoom
for_window [class="zoom" title="^Participants.{0,10}"] floating enable, resize set 600 1000

# Postions tooltips from waybar
for_window [app_id="waybar" floating] {
    move position cursor
    move down 120px # adjust if some menus still don't fit
    move left 100px
}

### Colors

# class                 border  bground text    indicator child_border
client.focused          #4C7899 #285577 #FFFFFF #2E9EF4   #1253C6 
client.focused_inactive #333333 #5F676A #FFFFFF #484E50   #5F676A
client.unfocused        #333333 #222222 #888888 #292D2E   #222222
client.urgent           #2F343A #900000 #FFFFFF #900000   #900000
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C


### Status Bar:
#
exec_always bash $HOME/.config/waybar/waybar.sh


### Function Buttons
#
#bindsym $mod+F1
# F2 is used for reloading
#bindsym $mod+F3
#bindsym $mod+F4
#bindsym $mod+F5
#bindsym $mod+F6
bindsym $mod+F7 exec wdisplays
#bindsym $mod+F8
#bindsym $mod+F9
#bindsym $mod+F10
#bindsym $mod+F11
#bindsym $mod+F12

### Include another config file named hostname.conf
include $HOME/.config/sway/conf.d/$(hostname).conf
